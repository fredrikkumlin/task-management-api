openapi: 3.0.3
info:
  title: Task Management API
  description: A simple API for managing tasks in a to-do list.
  version: 1.0.0
  contact:
    name: Your Name
    email: your.email@example.com
servers:
  - url: https://api.example.com
    description: Production server
  - url: http://localhost:8080
    description: Local development server
security:
  - basicAuth: [ ]
tags:
  - name: Tasks
    description: Operations for managing tasks

paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: Retrieve all tasks
      operationId: getAllTasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Tasks
      summary: Create a new task
      operationId: createTask
      requestBody:
        description: Task object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Retrieve a task by ID
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The requested task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Tasks
      summary: Update an existing task
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: Task object with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Tasks
      summary: Delete a task by ID
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{id}/complete:
    patch:
      tags:
        - Tasks
      summary: Mark a task as completed
      operationId: markTaskAsCompleted
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to mark as completed
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task marked as completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    TaskResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the task
        title:
          type: string
          description: The title of the task
        description:
          type: string
          description: A brief description of the task
        completed:
          type: boolean
          description: Indicates whether the task has been completed
        dueDate:
          type: string
          format: date
          nullable: true
          description: The due date for the task
    TaskRequest:
      type: object
      properties:
        title:
          type: string
          description: The title of the task
        description:
          type: string
          description: A brief description of the task
        dueDate:
          type: string
          format: date
          nullable: true
          description: The due date for the task
      required:
        - title
        - description
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
        errors:
          type: array
          description: List of validation errors
          items:
            type: object
            properties:
              field:
                type: string
                description: The name of the field that failed validation
              message:
                type: string
                description: The validation error message for the field
